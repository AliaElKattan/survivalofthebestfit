// variables
$badass: #bada55;

$colors: (
  bg-yellow: #F9F0E3,
  bg-washed-white: #FAFAFA,
  txt-light-grey: #B2B2B2,
  txt-black: #000000,
  rose-light: #FECCC7,
  grey-main: #F2F2F2,
  shadow-rose-light: #F29488, 
  shadow-rose-dark: #FFADA3,
  shadow-grey-light: #B9B9B9,
  shadow-grey-dark: #919191,
);

// functions + mixins
@function color($key) {
	@return map-get($colors, $key);
}

@mixin shadowBox($type, $width, $height, $shadow-color: 'grey') {
  &__wrapper {
    display: inline-block;
    margin-right: 20px;
    width: $width;
    height: $height;
  }
  
  height: inherit;
  width: inherit;
  position:relative;
  
  &:before, &:after {
    content: "";
    display: inline-block;
    position:absolute;
  }
  
  &:before {
    left: 0;
    width: inherit;
    // background: color(shadow-#{$shadow-color}-dark);
  }
  
  &:after {
    top: 0;
    height: inherit;
    // background: $shadow-light;
    // background: color(shadow-#{$shadow-color}-light);
  }

  @if $type == 'button' {
    // light shadow: right side
    &:after {
      width: 5px;
      right: -5px;
      transform: translateY(1px) skewY(25deg);
    }
    // dark shadow: bottom side
    &:before {
      height: 4px;
      bottom: -4px;
      transform:  translate(3px, -1px) skewX(55deg);
    }  
    
  } @elseif $type == 'textbox' {
    
    &:after {
      width: 10px;
      right: -10px;
      transform: translateY(3px) skewY(25deg);
    }
    
    &:before {
      height: 5px;
      bottom: -5px;
      transform:  translateX(5px) skewX(65deg);
    }  
    
  } @else {
    @error "Sorry, you supplied an invalid type"
  }
};

@mixin boxColors($bg-color: inherit, $shadow-color: 'grey') {
  background-color: $bg-color;
  &:before {
    background: color(shadow-#{$shadow-color}-dark);
  }
  
  &:after {
    background: color(shadow-#{$shadow-color}-light);
  }
}






// base

* {
  padding: 0;
  margin: 0;
  box-sizing: border-box;
}

body { 
  background-color: color(bg-yellow);
  margin: 10px;
  font-family: 'VT323', monospace;
}


// components

.conversationBox {
  @include shadowBox($type: 'textbox', $width: 600px, $height: 500px);
  @include boxColors($bg-color: color(bg-washed-white), $shadow-color: 'grey');
  
  padding: 10px 20px;
  
  &__wrapper {
    position: absolute;
    left: 50%;
    top: 50%;
    transform: translate(-50%, -50%);
    max-width: 700px;
  }
  
  &__head {
    color: color(txt-light-grey);
  }

}


.replica {
  display: block;
  margin: 10px 0 20px 0;
  
  &__paragraph {
    font-size: 1.2rem;
    margin-bottom: 15px;
  }
};

// button

button {
  outline: none;
  border: none;
  font-family: 'VT323', monospace;
  
  &:hover, &:active {
    outline: none;
    border: none;
  }
}

// $width, $height, $color-main, $color-dark, $color-darker
.choiceButton {
  @include shadowBox($type: 'button', $width: 250px, $height: 30px, );
  @include boxColors($bg-color: color(grey-main), $shadow-color: 'grey');
  
  display: flex;
  justify-content: center;
  align-items: center;
  text-align: center;
  
  color: color(txt-light-grey);
  
  &--chosen {
    @include boxColors($bg-color: color(rose-light), $shadow-color: 'rose');
    color: color(txt-black);
  }
}



// util
.is-inactive {
  display: none;
}

